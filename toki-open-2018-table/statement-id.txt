Tabel Perpangkatan


[Deskripsi]

Pak Dengklek bosan dengan tabel perkalian. Ia kemudian mencoba untuk membuat sebuah tabel perpangkatan berukuran M baris dan N kolom. Baris-baris pada tabel ini dinomori dari 1 sampai M, dan kolom-kolom pada tabel ini dinomori dari 1 sampai N. Pada tabel perpangkatan ini, sel pada baris ke-A dan kolom ke-B, dinotasikan juga sebagai sel (A, B), berisi sebuah bilangan bulat A^B. Berikut merupakan contoh tabel perpangkatan berukuran 5 baris dan 6 kolom.

[[table.png]]

Pak Dengklek sedang merasa beruntung dan iseng untuk bermain dengan bilangan-bilangan pada tabel perpangkatannya. Ia ingin mengambil beberapa sel dari tabel perpangkatan tersebut, kemudian menjumlahkan bilangan-bilangan pada sel-sel tersebut. Karena Pak Dengklek ingin menguji keberuntungannya, ia ingin dua digit terakhir dari hasil penjumlahan tersebut adalah 13. Sekarang, ia ingin mengetahui berapa banyak cara mengambil sel-sel dari tabel perpangkatannya, sehingga dua digit terakhir dari hasil penjumlahan sel-sel tersebut adalah 13. Dua cara dikatakan berbeda apabila terdapat sel yang diambil pada salah satu cara, namun tidak pada cara lainnya.

Sebagai tantangan tambahan, beberapa sel pada tabel tersebut tidak dapat diambil oleh Pak Dengklek. Tepatnya, terdapat K buah sel yang tidak dapat diambil, dinomori dari 1 sampai K. Sel ke-i yang tidak dapat diambil oleh Pak Dengklek adalah sel (C_i, D_i). Dapatkah Anda membantu Pak Dengklek? Karena jawabannya mungkin cukup besar, Anda cukup memberikannya dalam modulo 1.000.000.007.


[Tugas]

Anda harus mengimplementasikan fungsi countSubsets:

- countSubsets(M, N, K, C, D) - Fungsi ini akan dipanggil grader hanya sekali.
  - M: Banyaknya baris pada tabel perpangkatan Pak Dengklek.
  - N: Banyaknya kolom pada tabel perpangkatan Pak Dengklek.
  - K: Banyaknya sel yang tidak dapat diambil.
  - C: Sebuah vector berukuran K. C[i] menyatakan nilai C_{i + 1}.
  - D: Sebuah vector berukuran K. D[i] menyatakan nilai D_{i + 1}.
  - Fungsi ini harus mengembalikan sebuah int yang menyatakan banyaknya cara mengambil sel-sel dari tabel perpangkatan sehingga dua digit terakhir dari hasil penjumlahan sel-sel tersebut adalah 13, dalam modulo 1.000.000.007.


[Contoh]

Jika diberikan M = 4, N = 2, K = 0, C = {}, D = {}, maka terdapat 7 cara pengambilan yakni:
- 1^1 + 1^2 + 2^1 + 3^2 = 1 + 1 + 2 + 9 = 13
- 1^1 + 1^2 + 2^2 + 3^1 + 4^1 = 1 + 1 + 4 + 3 + 4 = 13
- 1^1 + 3^1 + 3^2 = 1 + 3 + 9 = 13
- 1^2 + 3^1 + 3^2 = 1 + 3 + 9 = 13
- 2^1 + 2^2 + 3^1 + 4^1 = 2 + 4 + 3 + 4 = 13
- 2^2 + 3^2 = 4 + 9 = 13
- 3^2 + 4^1 = 9 + 4 = 13
Perhatikan bahwa 1 + 3 + 9 dihitung dua kali karena bilangan 1 yang digunakan berbeda, yaitu dari sel (1, 1) dan (1, 2). Sehingga, fungsi countSubsets(M, N, K, C, D) harus mengembalikan 7.

Jika diberikan M = 1, N = 113, K = 0, C = {}, D = {}, maka fungsi countSubsets(M, N, K, C, D) harus mengembalikan 306746299.

Jika diberikan M = 200, N = 500, K = 2, C = {13, 111}, D = {1, 300}, maka fungsi countSubsets(M, N, K, C, D) harus mengembalikan 6424837.


[Subsoal]

Pada setiap subsoal berlaku

- 1 ≤ M, N ≤ 10^9
- 0 ≤ K ≤ min(M × N, 100.000)
- 1 ≤ C_i ≤ M
- 1 ≤ D_i ≤ N
- C_i ≠ C_j atau D_i ≠ D_j untuk setiap 1 ≤ i < j ≤ K

Subsoal 1 (11 poin)

- 1 ≤ M, N ≤ 4

Subsoal 2 (15 poin)

- 1 ≤ M, N ≤ 6

Subsoal 3 (17 poin)

- 1 ≤ M, N ≤ 500

Subsoal 4 (26 poin)

- 1 ≤ M, N ≤ 4.000

Subsoal 5 (31 poin)

- Tidak ada batasan tambahan


[Contoh Grader]

Contoh grader yang diberikan akan membaca masukan dengan format sebagai berikut:
- Baris pertama berisi tiga buah bilangan bulat M, N, dan K dipisahkan oleh spasi.
- K baris berikutnya berisi dua buah bilangan bulat dipisahkan oleh spasi. Baris ke-i berisi C[i - 1] dan D[i - 1] secara berurutan.

Contoh grader yang diberikan akan mencetak keluaran dengan format sebagai berikut:
- Baris pertama berisi sebuah bilangan bulat yang dikembalikan oleh fungsi countSubsets.


[Kerangka]

Kerangka soal dapat Anda unduh di sini.

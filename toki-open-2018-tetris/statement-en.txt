2-Wide Tetris™


[Description]

You are given a slot with 2 cells wide and infinite height. Initially, the slot is empty. You are also given a sequence of tetrominoes consisting of N tetrominoes numbered from 1 to N. Each tetromino occupies 4 cells and can be differentiated as 6 letters: O, T, J, L, S, Z. (Note that there is no tetromino with 4-cell length a.k.a. I tetromino.) The letter of the i-th tetromino is S_i. You may see the tetrominoes and their orientations by the following table.

[[tetris_1.png]]

You are going to play a variant of Tetris™ game which is 2-Wide Tetris™. For each tetromino in the sequence, you have to predetermine its orientation. After that, sequentially, the tetrominoes will be dropped into the slot. When dropping a tetromino (with its respective orientation), the following will happen in order:
1. If the width of the tetromino is more than 2 (for example tetromino T with orientation 0), then the game will end and you lose.
2. The tetromino will move from top to bottom, one row at a time, and will stop if moving down one more row will make the tetromino overlap with the slot base or occupied cell.
3. The tetromino will occupy the cells on its positions.
4. The game will check all the rows simulatenously: if every cell on a row is occupied, then that row will be removed. In other words, the rows above it will move one row below them.

You may see the following diagram as an example.

[[tetris_2.png]]

1. When you drop T tetromino with orientation 1, it will occupy some cells from the 1-st to the 3-rd row (from bottom) of the slot. Then, the game will remove the 2-nd row because all of the cells on it are occupied. The 3-rd row will move to the 2-nd row.
2. Next, when you drop S tetromino with orientation 1, it will occupy some cells from the 2-nd to the 4-th row. The game will remove the 2-nd and the 3-rd row. The 4-th row will move to the 2-nd row.
3. Next, when you drop J tetromino with orientation 3, it will occupy some cells from the 3-rd to the 5-th row. The game will remove the 3-rd row. Notice that the occupied cells on the 3-rd and the 4-th row are not dropped to the 1-st and the 2-nd row.
4. Next, when you drop J tetromino with orientation 1, it will occupy some cells from the 3-rd to the 5-th row. The game will remove the 3-rd, 4-th, and 5-th row.
5. Next, when you drop L tetromino with orientation 3, it will occupy some cells from the 1-st to the 3-rd row. The game will remove the 1-st, 2-nd, and 3-rd row so the slot will be empty.

You will win this game if and only if the slot is empty after dropping all of the tetrominoes. Can you find a way to win or state that it is impossible? If there is more than one way to win, you may return any of them.


[Task]

You have to implement arrangeTetrominoes function:

- arrangeTetrominoes(N, S, Q) - This function will be called exactly once by the grader.
  - N: The number of tetrominoes.
  - S: A string with size N. S[i] indicates the value of S_{i + 1}.
  - Q: The type of question.
  - This function must return a vector. If there is no way to win the game, return an empty vector. If there is a way to win the game:
    - If Q = 0, return a vector with size N consists of anything.
    - If Q = 1, the i-th element of the vector indicates the orientation of (i + 1)-th tetromino from the sequence to win the game. If there is more than one way to win, you may return any of them.


[Example]

If given N = 5, S = "TSJJL", Q = 1, then arrangeTetrominoes(N, S, Q) function may return {1, 1, 3, 1, 3}.

If given N = 4, S = "OOOO", Q = 1, then arrangeTetrominoes(N, S, Q) function may return {0, 1, 2, 3}.

If given N = 4, S = "OOOO", Q = 0, then arrangeTetrominoes(N, S, Q) function may return {219389123, 17816714, 474747, 1000944}.

If given N = 6, S = "SZSZSZ", Q = 1, then arrangeTetrominoes(N, S, Q) function must return {}.


[Subtasks]

For every subtask

- 1 ≤ N ≤ 200
- 0 ≤ Q ≤ 1
- S consists of letters from set {O, T, J, L, S, Z}

Subtask 1 (3 points)

- S consists of letters from set {O}

Subtask 2 (15 points)

- S consists of letters from set {O, J, L}

Subtask 3 (23 points)

- 1 ≤ N ≤ 18

Subtask 4 (37 points)

- Q = 0

Subtask 5 (22 points)

- No additional constraint


[Sample Grader]

The provided sample grader will read the input with the following format:
- The first row consists of two integers N and Q.
- The second row consists of a string S.

The provided sample grader will print the output with the following format:
- O lines, where O is the number of integers returned by arrangeTetrominoes function. The i-th line consists of the (i - 1)-th integer returned by arrangeTetrominoes.


[Skeleton]

You can download the skeleton for this problem here.


[Note]

Tetris™ is designed by Alexey Pajitnov and Vladimir Pokhilko and also trademarked by many publishers. No designer or publisher is involved in TOKI Open.
